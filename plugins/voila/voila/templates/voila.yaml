---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: orbit-voila
    {{- include "voila.labels" . | nindent 4 }}
  name: orbit-voila
  namespace: {{ .Values.namespace }}
spec:
  ports:
    - port: 4100
      protocol: TCP
      targetPort: 4100
  selector:
    app: orbit-voila
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: orbit-voila
    {{- include "voila.labels" . | nindent 4 }}
  name: orbit-voila
  namespace: {{ .Values.namespace }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orbit-voila
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: orbit-voila
        orbit/node-type: ec2
        orbit/attach-security-group: "yes"
        notebook-name: team-voila
      name: orbit-voila
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.jobAffinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.jobTolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ .Values.serviceAccountName }}
      securityContext:
        fsGroup: 100
      containers:
      - name: service
        securityContext:
          runAsUser: 1000
        image: {{ .Values.image.repository }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        env:
          {{- toYaml .Values.env | nindent 10 }}
        command: ["/bin/bash"]
        resources:
          limits:
            cpu: "4"
            memory: 4Gi
          requests:
            cpu: "200m"
            memory: "300Mi"
        args:
          - -c
          - >-
             mkdir -p {{.Values.path}} &&
             cd {{.Values.path}} &&
             voila --no-browser --port 4100 --base_url=/voila/ {{.Values.options}}
        volumeMounts:
          - mountPath: /home/jovyan/shared
            name: efs-volume
      volumes:
        - name: efs-volume
          persistentVolumeClaim:
            claimName: team-efs
      restartPolicy: Always
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: orbit-voila
  namespace: kubeflow
  labels:
    app: orbit-voila
    {{- include "voila.labels" . | nindent 4 }}
spec:
  hosts:
  - "*"
  gateways:
  - kubeflow-gateway
  http:
  - match:
    - headers:
        referer:
          regex: {{ .Values.urlSelector }}
      uri:
        prefix: /voila/
    rewrite:
      uri: /voila/
    route:
    - destination:
        host: orbit-voila.{{ .Values.namespace }}.svc.cluster.local
        port:
          number: 4100

