---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.fs_name }}
  labels:
    {{- include "fsx-storageclass.labels" . | nindent 4 }}
  namespace: {{ .Values.namespace }}
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: {{ .Values.storageClassName }}
  resources:
    requests:
      storage: {{ .Values.storage }}
---
apiVersion: batch/v1
kind: Job
metadata:
  name: chmod-fsx-job-{{ .Values.namespace }}
  namespace: {{ .Values.namespace }}
  labels:
    job-name: chmod-fsx-job-{{ .Values.namespace }}
    {{- include "fsx-storageclass.labels" . | nindent 4 }}
spec:
  template:
    metadata:
      labels:
        job-name: chmod-fsx-job-{{ .Values.namespace }}
        {{- include "fsx-storageclass.labels" . | nindent 8 }}
    spec:
      nodeSelector:
        orbit/usage: teams
        orbit/node-type: ec2
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              preference:
                matchExpressions:
                  - key: k8s.amazonaws.com/accelerator
                    operator: DoesNotExist
      serviceAccountName: default-editor
      containers:
      - name: ownership-change
        securityContext:
          runAsUser: 0
        image: {{.Values.image_repository}}
        command: ["/bin/bash"]
        resources:
          limits:
            cpu: "100m"
            memory: "256Mi"
          requests:
            cpu: "10m"
            memory: "20Mi"        
        args:
          - -c
          - >-  
            echo 'Starting CHMOD' &&       
            chown -hR +999:+65534 /data  &&
            echo 'Ending CHMOD'
        volumeMounts:
        - name: persistent-storage
          mountPath: /data
      volumes:
      - name: persistent-storage
        persistentVolumeClaim:
          claimName: {{ .Values.fs_name }}
      restartPolicy: Never