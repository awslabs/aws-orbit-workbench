---
# Source: aws-fsx-csi-driver/templates/controller-serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: fsx-csi-controller-sa
  labels:
    app.kubernetes.io/name: aws-fsx-csi-driver
  #Enable if EKS IAM for SA is used
  annotations:
    eks.amazonaws.com/role-arn: ${orbit_cluster_role}
---
# Source: aws-fsx-csi-driver/templates/controller-serviceaccount.yaml
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fsx-csi-external-provisioner-role
  labels:
    app.kubernetes.io/name: aws-fsx-csi-driver
rules:
  - apiGroups: [""]
    resources: ["persistentvolumes"]
    verbs: ["get", "list", "watch", "create", "delete"]
  - apiGroups: [""]
    resources: ["persistentvolumeclaims"]
    verbs: ["get", "list", "watch", "update"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["storageclasses"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["events"]
    verbs: ["list", "watch", "create", "update", "patch"]
  - apiGroups: ["storage.k8s.io"]
    resources: ["csinodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["nodes"]
    verbs: ["get", "list", "watch"]
  - apiGroups: ["coordination.k8s.io"]
    resources: ["leases"]
    verbs: ["get", "watch", "list", "delete", "update", "create"]
---
# Source: aws-fsx-csi-driver/templates/controller-serviceaccount.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: fsx-csi-external-provisioner-binding
  labels:
    app.kubernetes.io/name: aws-fsx-csi-driver
subjects:
  - kind: ServiceAccount
    name: fsx-csi-controller-sa
    namespace: default
roleRef:
  kind: ClusterRole
  name: fsx-csi-external-provisioner-role
  apiGroup: rbac.authorization.k8s.io
