---
kind: Service
apiVersion: v1
metadata:
  name: admission-controller-pod-settings-mutator
  namespace: orbit-system
spec:
  selector:
    app: admission-controller-pod-settings-mutator
  ports:
  - name: https
    protocol: TCP
    port: 443
    targetPort: 443
---
kind: MutatingWebhookConfiguration
apiVersion: admissionregistration.k8s.io/v1beta1
metadata:
  name: orbit-admission-controller-pod-settings-mutator
webhooks:
  - name: admission-controller-pod-settings-mutator.orbit-system.svc
    sideEffects: None
    reinvocationPolicy: IfNeeded
    failurePolicy: Fail
    matchPolicy: Equivalent
    namespaceSelector:
      matchExpressions:
        - key: orbit/space
          operator: In
          values:
            - team
            - user
    rules:
      - operations: ["CREATE", "UPDATE"]
        apiGroups: [""]
        apiVersions: ["v1"]
        resources: ["pods"]
    clientConfig:
      caBundle: ""
      service:
        namespace: orbit-system
        name: admission-controller-pod-settings-mutator
        path: /pod
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: admission-controller-config
  namespace: orbit-system
data:
  FLASK_DEBUG: "1"
  FLASK_ENV: development
  GUNICORN_WORKERS: "1"
  ADMISSION_CONTROLLER_DEBUG: "1"
  IN_CLUSTER_DEPLOYMENT: "1"
  NAMESPACE_WATCHER_WORKERS: "1"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: admission-controller-state
  namespace: orbit-system
data: {}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: admission-controller
  namespace: orbit-system
  name: admission-controller-pod-settings-mutator
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  serviceName: admission-controller-pod-settings-mutator
  selector:
    matchLabels:
      app: admission-controller-pod-settings-mutator
  template:
    metadata:
      labels:
        app: admission-controller-pod-settings-mutator
      name: admission-controller-pod-settings-mutator
    spec:
      serviceAccountName: orbit-${env_name}-admin
      containers:
        - name: webhook
          image: ${admission_controller_image}
          imagePullPolicy: ${image_pull_policy}
          ports:
            - containerPort: 443
              name: https
              protocol: TCP
          envFrom:
            - configMapRef:
                name: admission-controller-config
          command:
            - gunicorn
          args:
            - "--bind=0.0.0.0:443"
            - "--certfile=/certs/tls.crt"
            - "--keyfile=/certs/tls.key"
            - "--workers=$(GUNICORN_WORKERS)"
            - "--reload"
            - "aws_orbit_admission_controller.server:app"
          volumeMounts:
            - readOnly: true
              mountPath: /certs
              name: admission-controller-certs
            - mountPath: /state
              name: admission-controller-state
          readinessProbe:
            httpGet:
              path: /health
              scheme: HTTPS
              port: 443
            initialDelaySeconds: 3
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              scheme: HTTPS
              port: 443
            initialDelaySeconds: 3
            periodSeconds: 5
          resources:
            limits:
              cpu: 2
              memory: 2G
            requests:
              cpu: 1
              memory: 1G
      volumes:
        - name: admission-controller-certs
          secret:
            secretName: admission-controller-pod-settings-mutator-certs
        - name: admission-controller-state
          configMap:
            name: admission-controller-state
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: admission-controller
  namespace: orbit-system
  name: admission-controller-namespace-watcher
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  serviceName: ""
  selector:
    matchLabels:
      app: admission-controller-namespace-watcher
  template:
    metadata:
      labels:
        app: admission-controller-namespace-watcher
      name: admission-controller-namespace-watcher
    spec:
      serviceAccountName: orbit-${env_name}-admin
      containers:
        - name: namesapce-watcher
          image: ${admission_controller_image}
          imagePullPolicy: ${image_pull_policy}
          envFrom:
            - configMapRef:
                name: admission-controller-config
          command:
            - admission-controller
            - watch
            - namespaces
          args:
            - "--workers=$(NAMESPACE_WATCHER_WORKERS)"
          volumeMounts:
            - mountPath: /state
              name: admission-controller-state
          resources:
            limits:
              cpu: 2
              memory: 2G
            requests:
              cpu: 1
              memory: 1G
      volumes:
        - name: admission-controller-state
          configMap:
            name: admission-controller-state
