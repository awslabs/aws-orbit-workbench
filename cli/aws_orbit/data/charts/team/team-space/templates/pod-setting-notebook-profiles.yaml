---
apiVersion: orbit.aws/v1
kind: PodSetting
metadata:
  name: orbit-vscode
  namespace: {{ .Values.team }}
  labels:
    orbit/space: team
    {{- include "team-space.labels" . | nindent 4 }}
spec:
  desc:  VSCode Server
  notebookApp: code-server
  containerSelector:
    jsonpath: "metadata.labels.app"
  podSelector:
    matchExpressions:
      - key: orbit/orbit-vscode
        operator: Exists
      - key: app
        operator: NotIn
        values:
          - "orbit-runner"
  securityContext:
    runAsUser: 1000
  env:
    - name: default_url
      value: /code-server
    - name: mem_guarantee
      value: 4G
---
apiVersion: orbit.aws/v1
kind: PodSetting
metadata:
  name: orbit-workstation
  namespace: {{ .Values.team }}
  labels:
    orbit/space: team
    {{- include "team-space.labels" . | nindent 4 }}
spec:
  desc:  Linux WorkStation
  notebookApp: /desktop
  containerSelector:
    jsonpath: "metadata.labels.app"
  podSelector:
    matchExpressions:
      - key: orbit/orbit-workstation
        operator: Exists
      - key: app
        operator: NotIn
        values:
          - "orbit-runner"
  securityContext:
    runAsUser: 1000
  env:
    - name: default_url
      value: /desktop
    - name: mem_guarantee 
      value: 4G
    - name: mem_limit 
      value: 4G
---
apiVersion: orbit.aws/v1
kind: PodSetting
metadata:
  name: orbit-jupyter-with-apps
  namespace: {{ .Values.team }}
  labels:
    orbit/space: team
    {{- include "team-space.labels" . | nindent 4 }}
spec:
  desc:  Jupyer with custom apps
  containerSelector:
    jsonpath: "metadata.labels.app"
  podSelector:
    matchExpressions:
      - key: orbit/orbit-jupyter-with-apps
        operator: Exists
      - key: app
        operator: NotIn
        values:
          - "orbit-runner"
  securityContext:
    runAsUser: 1000
  env:
    - name: mem_guarantee 
      value: 4G
    - name: cpu_guarantee
      value: "2.0"

